import { SVGProps } from "react";

// SportsMan component renders an SVG representing a sports figure
export const SportsMan = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      {...props}
      width="20"
      height="18"
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {/* Path defining the sportsman shape */}
      <path
        d="M11.05 1.14V1.08C11.05 0.8 11.14 0.55 11.32 0.33C11.5 0.11 11.73 0 12.01 0C12.29 0 12.54 0.0900001 12.76 0.27C12.98 0.45 13.1 0.69 13.12 0.99C13.14 1.29 13.05 1.54 12.85 1.74C12.65 1.94 12.41 2.04 12.13 2.04L11.95 2.1L12.01 2.19L11.95 2.52L11.83 3.48C11.87 3.52 11.89 3.56 11.89 3.6L11.77 4.2C11.73 4.28 11.69 4.34 11.65 4.38L11.59 4.62C11.51 4.94 11.44 5.2 11.38 5.4C11.32 5.6 11.27 5.76 11.23 5.88V6C11.19 6.2 11.16 6.36 11.14 6.48C11.12 6.6 11.05 6.8 10.93 7.08C10.85 7.24 10.85 7.5 10.93 7.86L10.99 7.92C10.99 8.04 11.04 8.18 11.14 8.34C11.24 8.5 11.29 8.64 11.29 8.76C11.33 9.56 11.27 10.24 11.11 10.8L11.23 11.16C11.71 11.4 11.85 11.66 11.65 11.94L11.95 12.06C12.43 12.3 12.77 12.51 12.97 12.69C13.17 12.87 13.37 13.06 13.57 13.26C13.73 13.3 13.85 13.36 13.93 13.44L14.11 13.5C14.95 14.06 15.79 14.74 16.63 15.54L16.87 15.72V15.78L16.81 15.9L16.99 16.02H17.05C17.17 16.1 17.25 16.14 17.29 16.14H17.35C17.39 16.14 17.43 16.12 17.47 16.08L17.59 16.02C17.67 15.94 17.75 15.88 17.83 15.84H18.07C18.11 15.84 18.11 15.86 18.07 15.9L17.83 16.02L17.53 16.38H17.95L18.37 16.44C18.49 16.4 18.59 16.36 18.67 16.32L18.97 16.14C19.09 16.1 19.21 16.14 19.33 16.26H19.39C19.43 16.3 19.41 16.36 19.33 16.44L18.61 17.1C18.41 17.26 18.23 17.36 18.07 17.4L17.29 17.94C17.25 17.98 17.21 17.98 17.17 17.94L16.99 17.7L16.87 17.46L16.72 17.25L16.54 17.01L16.39 16.83L16.27 16.68L16.03 16.5C15.95 16.5 15.87 16.48 15.79 16.44L15.01 15.84C14.89 15.84 14.75 15.78 14.59 15.66C13.99 15.14 13.59 14.82 13.39 14.7L13.03 14.46L12.31 14.34C12.07 14.3 11.75 14.18 11.35 13.98L10.87 13.74C10.55 13.58 10.33 13.5 10.21 13.5L9.96996 13.38C9.80996 13.34 9.68996 13.3 9.60996 13.26L9.48996 13.14C9.40996 13.14 9.32996 13.16 9.24996 13.2L8.04996 13.8L6.54996 14.46C6.14996 14.78 5.76996 15.04 5.40996 15.24L4.74996 15.54L3.72996 16.26C3.64996 16.34 3.56996 16.34 3.48996 16.26L3.36996 16.38C3.24996 16.42 3.16996 16.44 3.12996 16.44L2.88996 16.56V16.68H2.76996L2.64996 16.86C2.56996 17.02 2.48996 17.11 2.40996 17.13C2.32996 17.15 2.27996 17.18 2.25996 17.22C2.23996 17.26 2.21996 17.29 2.19996 17.31L2.07996 17.43L1.89996 17.55L1.62996 17.52L1.26996 17.58L1.02996 17.64C0.829961 17.68 0.669961 17.65 0.549961 17.55C0.429961 17.45 0.329961 17.3 0.249961 17.1C0.169961 16.98 0.209961 16.88 0.369961 16.8L0.429961 16.74C0.469961 16.7 0.529961 16.68 0.609961 16.68H0.969961L1.44996 16.5L1.68996 16.44C1.68996 16.36 1.70996 16.3 1.74996 16.26C1.78996 16.22 1.84996 16.2 1.92996 16.2V16.14C1.88996 16.06 1.86996 15.98 1.86996 15.9C1.82996 15.82 1.81996 15.76 1.83996 15.72C1.85996 15.68 1.87996 15.66 1.89996 15.66H1.92996L1.98996 15.84C2.02996 16.04 2.08996 16.1 2.16996 16.02L2.22996 15.9C2.26996 15.82 2.32996 15.78 2.40996 15.78L2.52996 15.9L2.64996 15.78L2.58996 15.72C2.58996 15.68 2.60996 15.66 2.64996 15.66L2.88996 15.42C3.08996 15.18 3.32996 14.96 3.60996 14.76C4.16996 14.32 4.76996 13.98 5.40996 13.74C5.60996 13.54 5.82996 13.44 6.06996 13.34C6.28996 13.24 6.50996 13.14 6.64996 13.08L6.76996 13.04L6.82996 13.02L7.02996 12.92C7.30996 12.72 7.52996 12.58 7.84996 12.44L8.34996 12.22C8.54996 12.06 8.68996 11.94 8.88996 11.86L8.98996 11.84L9.08996 11.84L9.14996 11.88L9.18996 11.9L9.24996 11.86C9.30996 11.8 9.36996 11.72 9.42996 11.6C9.48996 11.48 9.56996 11.36 9.60996 11.2V11.1C9.64996 11.04 9.71996 10.98 9.79996 10.94L9.91996 10.88L9.98996 10.78L9.99 10.76L10.01 10.62L10.09 10.58L10.09 10.44L10.15 10.32L10.16 10.18L10.22 10.02L10.2 10L10.04 9.88L10.09 9.62L10.05 9.48L10.05 9.3L9.89 9.22C9.81 9.14 9.79 9.02 9.79 8.92L9.93 8.78C10.01 8.66 10.1 8.54 10.23 8.46L10.69 8.14L10.99 8.04L11.07 8.06L11.19 8.24C11.39 8.28 11.51 8.38 11.61 8.5L11.69 8.6L11.77 8.72C11.85 8.86 11.87 9.04 11.89 9.26C11.93 9.48 11.91 9.68 11.81 9.88L11.93 9.98L11.99 10.04L12.09 10.04L12.13 9.96L12.19 9.88L12.21 9.72L12.19 9.58C12.11 9.34 12.07 9.2 11.95 9.12C11.89 9.04 11.79 8.94 11.69 8.94C11.59 8.94 11.49 9.04 11.39 9.12C11.29 9.2 11.25 9.34 11.29 9.56C11.31 9.76 11.35 9.94 11.45 10.04L11.73 10.16L11.79 10.34L11.85 10.46L11.79 10.56L11.59 10.6L11.49 10.54L11.43 10.52L11.41 10.46C11.33 10.36 11.25 10.22 11.13 10.1L11.07 10.02L10.99 9.98L10.89 10L10.89 9.98L10.93 9.9Z"
        fill="currentColor"
      />
    </svg>
  );
};

// Trash Icon component
export const TrashIcon = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      {...props}
      width="19"
      height="22"
      viewBox="0 0 19 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {/* Path for trash icon design */}
      <path
        d="M11.75 6.39062V18.3906M7.25 6.39062V18.3906M2.75 4.89062V18.3906C2.75 19.6306 3.76 20.6406 5 20.6406H14C15.24 20.6406 16.25 19.6306 16.25 18.3906V4.14062M16.25 4.14062H19M16.25 4.14062H18.5M6.5 1.14062H11.75C12.58 1.14062 13.25 1.81063 13.25 2.64062C13.25 3.47062 12.58 4.14062 11.75 4.14062H0.5"
        stroke="#111111"
        strokeWidth="1.5"
        strokeMiterlimit="10"
      />
    </svg>
  );
};

// Cart Icon component
export const CartIcon = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      {...props}
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {/* Main cart path */}
      <path
        d="M0.823242 1.42676L3.33658 1.86176L4.5002 15.725C4.5449 16.2705 4.79364 16.7791 5.19679 17.1493C5.59993 17.5196 6.12785 17.7242 6.6752 17.7223H19.8581C20.3822 17.7229 20.8889 17.5343 21.285 17.191C21.681 16.8478 21.9398 16.3731 22.0138 15.8543L23.1617 7.93001C23.1923 7.71926 23.1811 7.50455 23.1286 7.29816C23.0762 7.09176 22.9836 6.89772 22.8561 6.72714C22.7286 6.55656 22.5687 6.41279 22.3856 6.30403C22.2025 6.19528 21.9998 6.12369 21.789 6.09334C21.7117 6.08488 3.74016 6.07884 3.74016 6.07884"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      {/* Additional cart path */}
      <path
        d="M14.5684 10.5439H17.9191"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      {/* Bottom of the cart */}
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M6.14478 21.9117C6.23339 21.9079 6.32186 21.9221 6.40485 21.9534C6.48784 21.9847 6.56365 22.0324 6.62769 22.0938C6.69174 22.1552 6.7427 22.2288 6.77752 22.3104C6.81234 22.392 6.83029 22.4798 6.83029 22.5685C6.83029 22.6572 6.81234 22.7449 6.77752 22.8265C6.7427 22.9081 6.69174 22.9818 6.62769 23.0431C6.56365 23.1045 6.48784 23.1523 6.40485 23.1835C6.32186 23.2148 6.23339 23.229 6.14478 23.2252C5.97548 23.2179 5.81552 23.1456 5.6983 23.0232C5.58107 22.9008 5.51563 22.7379 5.51562 22.5685C5.51563 22.399 5.58107 22.2361 5.6983 22.1137C5.81552 21.9914 5.97548 21.919 6.14478 21.9117Z"
        fill="#272343"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      {/* Right wheel of cart */}
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M19.7757 21.9121C19.9504 21.9121 20.1179 21.9815 20.2414 22.105C20.3649 22.2285 20.4343 22.396 20.4343 22.5706C20.4343 22.7453 20.3649 22.9128 20.2414 23.0363C20.1179 23.1598 19.9504 23.2292 19.7757 23.2292C19.6011 23.2292 19.4336 23.1598 19.3101 23.0363C19.1866 22.9128 19.1172 22.7453 19.1172 22.5706C19.1172 22.396 19.1866 22.2285 19.3101 22.105C19.4336 21.9815 19.6011 21.9121 19.7757 21.9121Z"
        fill="#272343"
        stroke="white"
        strokeWidth="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  );
};

// Filter Icon component
export const FilterIcon = (props: SVGProps<SVGSVGElement>) => {
  return (
    <svg
      {...props}
      width="25"
      height="24"
      viewBox="0 0 25 24"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      {/* Filter bar paths */}
      <path
        d="M21.5312 8.25H10.5312M5.28125 8.25H3.53125"
        stroke="#111111"
        strokeWidth="1.5"
      />
      {/* Circular filter icon */}
      <path
        d="M8.03125 6C7.73578 6 7.44319 6.0582 7.17021 6.17127C6.89723 6.28434 6.64919 6.45008 6.44026 6.65901C6.23133 6.86794 6.06559 7.11598 5.95252 7.38896C5.83945 7.66194 5.78125 7.95453 5.78125 8.25C5.78125 8.54547 5.83945 8.83806 5.95252 9.11104C6.06559 9.38402 6.23133 9.63206 6.44026 9.84099C6.64919 10.0499 6.89723 10.2157 7.17021 10.3287C7.44319 10.4418 7.73578 10.5 8.03125 10.5C8.62799 10.5 9.20028 10.2629 9.62224 9.84099C10.0442 9.41903 10.2812 8.84674 10.2812 8.25C10.2812 7.65326 10.0442 7.08097 9.62224 6.65901C9.20028 6.23705 8.62799 6 8.03125 6Z"
        stroke="#111111"
        strokeWidth="1.5"
      />
      {/* Second filter bar paths */}
      <path
        d="M3.53125 15.75H14.2812M19.2812 15.75H21.5312"
        stroke="#111111"
        strokeWidth="1.5"
      />
      {/* Circular filter icon */}
      <path
        d="M17.0312 13.5C16.4345 13.5 15.8622 13.7371 15.4403 14.159C15.0183 14.581 14.7812 15.1533 14.7812 15.75C14.7812 16.3467 15.0183 16.919 15.4403 17.341C15.8622 17.763 16.4345 18 17.0312 18C17.6279 18 18.2002 17.763 18.6222 17.341C19.0442 16.919 19.2812 16.3467 19.2812 15.75C19.2812 15.1533 19.0442 14.581 18.6222 14.159C18.2002 13.7371 17.6279 13.5 17.0312 13.5Z"
        stroke="#111111"
        strokeWidth="1.5"
      />
    </svg>
  );
};
